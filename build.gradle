import org.apache.tools.ant.taskdefs.condition.Os
import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'application'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'jacoco'
    id 'io.gitlab.arturbosch.detekt' version '1.23.6'
}

final List<String> coverageExclusions = [
    '**/*.class',
    '**/PokemonGame.kt',
    '**/koin/*.kt',
    '**/pokemon/*.kt',
    '**/moves/*/kt',
]

jacocoTestCoverageVerification {
    violationRules { JacocoViolationRulesContainer violations ->
        violations.rule { JacocoViolationRule rule ->
            rule.limit { JacocoLimit limit ->
                limit.minimum = 0.9
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclusions)
        })
    }
}

jacocoTestReport {
    dependsOn test

    reports {
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

detekt {
    buildUponDefaultConfig = true
    allRules = false
    config.setFrom "$projectDir/config/detekt-config.yml"
    // baseline = file "$projectDir/config/baseline.xml"
}

tasks.withType(Detekt).configureEach {
    dependsOn spotlessApply

    jvmTarget = "17"

    reports {
        html.required.set(true)
        txt.required.set(true)
    }
}

tasks.withType(DetektCreateBaselineTask).configureEach {
    jvmTarget = "17"
}

spotless {
    ratchetFrom 'origin/master'

    kotlin {
        target 'src/**/*.kt'
        ktfmt().kotlinlangStyle()
    }
}

tasks.register 'format', {
    dependsOn 'spotlessApply'
}

repositories { 
    mavenCentral()
}

apply from: file('dependencies.gradle')

test {
    useJUnitPlatform() {
        includeEngines 'jqwik'
    }
}

kotlin {
    jvmToolchain 17
}

application {
    mainClass = 'pokemongame.PokemonGame'
}

if (Os.isFamily(Os.FAMILY_MAC)) {
    application.applicationDefaultJvmArgs = ['-XstartOnFirstThread']
}

check.dependsOn jacocoTestCoverageVerification, spotlessApply
build.dependsOn jacocoTestReport
